package org.earthsystemmodeling.cupid.nuopc.v7r

import org.earthsystemmodeling.cupid.NUOPC.Application
import java.text.SimpleDateFormat
import java.util.Calendar
import org.earthsystemmodeling.cupid.nuopc.CodeGenerationException
import org.earthsystemmodeling.cupid.NUOPC.Driver
import org.eclipse.core.resources.IFile
import org.eclipse.core.runtime.NullProgressMonitor
import java.io.ByteArrayInputStream
import org.earthsystemmodeling.cupid.NUOPC.BaseModel
import org.earthsystemmodeling.cupid.NUOPC.Connector

class MakefileGenerator {
	
	def static generateAndWrite(Application app, IFile toFile) {
		val content = generate(app)
		toFile.setContents(new ByteArrayInputStream(content.bytes), true, true, new NullProgressMonitor())
	}
	
	def static String generate(Application app) {
		
		if (app.name==null) 
			throw new CodeGenerationException("App must have a name to generate makefile")
		
		val timeStamp = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());
		
		'''
		# Auto-generated Makefile for NUOPC Application: «app.name»
		
		# This Makefile was generated by Cupid on «timeStamp».
		# https://earthsystemcog.org/projects/cupid/
		
		################################################################################
		################################################################################
		## This Makefile must be able to find the "esmf.mk" Makefile fragment in the  ##
		## 'include' line below. Following the ESMF User's Guide, a complete ESMF     ##
		## installation should ensure that a single environment variable "ESMFMKFILE" ##
		## is made available on the system. This variable should point to the         ##
		## "esmf.mk" file.                                                            ##
		##                                                                            ##
		## This example Makefile uses the "ESMFMKFILE" environment variable.          ##
		##                                                                            ##
		## If you notice that this Makefile cannot find variable ESMFMKFILE then      ##
		## please contact the person responsible for the ESMF installation on your    ##
		## system.                                                                    ##
		## As a work-around you can simply hardcode the path to "esmf.mk" in the      ##
		## include line below. However, doing so will render this Makefile a lot less ##
		## flexible and non-portable.                                                 ##
		################################################################################
		
		ifneq ($(origin ESMFMKFILE), environment)
		$(error Environment variable ESMFMKFILE was not set.)
		endif
		
		include $(ESMFMKFILE)
		
		################################################################################
		################################################################################
		
		.SUFFIXES: .f90 .F90 .c .C
		
		%.o : %.f90
			$(ESMF_F90COMPILER) -c $(ESMF_F90COMPILEOPTS) $(ESMF_F90COMPILEPATHS) $(ESMF_F90COMPILEFREENOCPP) $<
		
		%.o : %.F90
			$(ESMF_F90COMPILER) -c $(ESMF_F90COMPILEOPTS) $(ESMF_F90COMPILEPATHS) $(ESMF_F90COMPILEFREECPP) $(ESMF_F90COMPILECPPFLAGS) -DESMF_VERSION_MAJOR=$(ESMF_VERSION_MAJOR) $<
		
		%.o : %.c
			$(ESMF_CXXCOMPILER) -c $(ESMF_CXXCOMPILEOPTS) $(ESMF_CXXCOMPILEPATHSLOCAL) $(ESMF_CXXCOMPILEPATHS) $(ESMF_CXXCOMPILECPPFLAGS) $<
		
		%.o : %.C
			$(ESMF_CXXCOMPILER) -c $(ESMF_CXXCOMPILEOPTS) $(ESMF_CXXCOMPILEPATHSLOCAL) $(ESMF_CXXCOMPILEPATHS) $(ESMF_CXXCOMPILECPPFLAGS) $<
		
		
		# -----------------------------------------------------------------------------
		«app.name»: «app.name».o «FOR c : app.allChildren.filter[!(it instanceof Connector)] SEPARATOR ' '»«c.name».o«ENDFOR»
			$(ESMF_F90LINKER) $(ESMF_F90LINKOPTS) $(ESMF_F90LINKPATHS) $(ESMF_F90LINKRPATHS) -o $@ $^ $(ESMF_F90ESMFLINKLIBS)
		
		# module dependencies:
		«app.name».o: «FOR d : app.children.filter(Driver) SEPARATOR ' '»«d.name».o«ENDFOR»
		«FOR d : app.children.filter(Driver)»
		«IF d.children.size > 0»
		«d.name».o:  «FOR c : d.children.filter[!(it instanceof Connector)] SEPARATOR ' '»«c.name».o«ENDFOR»
		«ENDIF»
		«ENDFOR»
		
		
		# -----------------------------------------------------------------------------
		# -----------------------------------------------------------------------------
		.PHONY: dust clean distclean
		dust:
			rm -f PET*.ESMF_LogFile
		clean:
			rm -f «app.name» *.o *.mod
		distclean: dust clean
				
		'''
	}
	
}